While using packages made by other developers can really boost your app creation speed,
sometimes you need to create your own packages. Some of the main reasons for creating a
new package are as follows:
    - Modularity
    - Code reuse
    - Low-level interaction with a specific environment

Packages help you write modular code, as you can include several files and dependencies
in a single package, and just depend on it in your app. At the same time, code reuse is made
extremely simple, as packages can be shared among different apps. Also, when you make
changes to a package, you only need to make them in one place, and they will
automatically cascade to all the apps that point to that package.

There is a special type of package, called a plugin, that contains platform-specific
implementations, for iOS, Android, and other systems. You generally create a plugin when
you need to interact with specific low-level features of a system. Examples include
hardware, such as the camera, or software, such as the contacts in a smartphone.

In this recipe, you will create a simple Dart package that finds the area of a rectangle or a
triangle.

Packages enable the creation of modular code that can be shared easily. The simplest
package should at least contain the following:
    - A pubspec.yaml file, with the package name, version, and other metadata
    - A lib folder, containing the code of the package

A package can contain more than a single file in the lib folder, but must contain at least a
single dart file with the name of the package; in our example, area.dart.


PART TWO

The previous recipe works when your package is contained within your project. In this
second part of the Creating your own package recipe, you will see how to create a package
made of multiple files, and depend on a Git repository from the main project.
<<<<<<< HEAD

"area:
    git: https://github.com/simoales/area.git"
This syntax allows packages to be added from a git repository. This is useful for packages
that you want to keep private within your team, or to depend on a package before it gets
published to pub.dev. Being able to depend on a package available in a git repository
allows you to simply share packages between projects and teams.


PART THREE 
Creating your own package (part 3)

If you want to contribute to the Flutter community, you can share your packages in the
pub.dev repository. In this recipe, you will see the steps required in order to achieve this.

BSD licenses are open source licenses that allow almost any legitimate use
of the software, cover the author from any liability, and only add minimal
restrictions on the use and distribution of the software, both for private
and commercial reasons.
=======
>>>>>>> ac4740c1e213fa6abfe35d2f914f1dec66bd7f94
